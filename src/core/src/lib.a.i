// Load the string dictionary
üî†("string_dictionary.json");

// Core module for the Anarchy Agent
// This is the main entry point for the core functionality

// Import submodules
Œπ agent = ‚ü∞("./agent");
Œπ config = ‚ü∞("./config");
Œπ error = ‚ü∞("./error");

// Export the main functions and objects
∆ícreate_agent(config_obj, planner, executor, memory, browser, file_system, shell) {
    ‚Ü© agent.new(config_obj, planner, executor, memory, browser, file_system, shell);
}

∆írun_agent(agent_obj) {
    ‚Ü© agent.run(agent_obj);
}

∆ícreate_config() {
    ‚Ü© config.create_config();
}

∆ídefault_config() {
    ‚Ü© config.default_config();
}

// Error creation helpers
∆íconfig_error(message) {
    ‚Ü© error.config_error(message);
}

∆íplanner_error(message) {
    ‚Ü© error.planner_error(message);
}

∆íexecutor_error(message) {
    ‚Ü© error.executor_error(message);
}

// Version information
Œπ VERSION = "1.0.0";

// Print version information
∆íprint_version() {
    ‚åΩ(:version_prefix + VERSION);
}

// Initialize the core module
∆íinitialize() {
    ‚åΩ(:initializing_core);
    // Perform any necessary initialization
    ‚Ü© {
        success: true,
        message: :core_initialized
    };
}
